.---------------------------------.
| November 3rd, 2016              |
|  Notes about the print function |
'---------------------------------'

ip_addr = '192.168.0.1'
rtr_name     = 'sf-rtr-1'

# Normal print statement using concatenation, pulling
#  the variables in on their own.
print("Router (" + rtr_name + ") has an IP address of (" + ip_addr + ")")

# This is a little cleaner, it uses the format operator, %,
#  to pull in variables listed at the end.
print("Router (%s) has an IP address of (%s)" %(rtr_name, ip_addr))

# Newer way to pull the variables using .format method & curly braces
#  see: https://docs.python.org/3.5/library/string.html#formatspec
print("Router ({}) has an IP address of ({})".format(rtr_name, ip_addr))

.------------------------------------------.
| Using the format operator to print       |
|  strings with formatting                 |
'------------------------------------------'
a = 10
b = 1000
c = 707

# No formatting
print("%s %s %s" %(a, b, c))
print("{} {} {}".format(a, b, c))

# 15 space columns including the string
print("%15s %15s %15s" %(a, b, c))
print("{:15} {:15} {:15}".format(a, b, c))

# Left alligned columns using a negative
print("%-15s %-15s %-15s" %(a, b, c))
print("{:<15} {:<15} {:<15}".format(a, b, c))

# Format using float and integeter operator
d = 3.145

print("%.2f" %a)
print("%.3f" %a)
print("%3i" %a)
